{
module(shortestio).

/* make cost (all to all)  */
// 1 to $1
iomake @@
shortestio.make:-
io.read_token(io.stdin,I,S),
makedata.cost(1,integer.of_str(S)),
io.free_port(I).

/* make cost (one to all)  */
// 1 to $1, start node is $2
iomakes @@
shortestio.make_s:-
io.read_token(io.stdin,I,S),
makedata.cost(1,integer.of_str(S),integer.of_str(S1)),
io.read_token(I,I1,S1),
io.free_port(I1).


/* make cost (one to all) unfinished  */
// 1 to $1, start node is $2
ioms @@
shortestio.make_string=[$a|H]:-unary($a),uniq|
cost($a,$a,0,no),l=H,cost($a).
ioms2 @@
cost($a),l=[X|H]:-unary($a)|
cost($a),cost($a,X,1000000000,null),l=H.
ioms3 @@
cost($a):-unary($a)|.

// 1 to $1, start node is $2 and hyperlink
iomshl @@
shortestio.make_string_hyper=[$a|H]:-unary($a),uniq|
cost($a,!A,$a,!A,0,no),l=H,cost($a,!A),ll=[].
iomshl2 @@
cost($a,!A),l=[$b|H],ll(T):-unary($a),unary($b)|
cost($a,!A),cost($a,!A,$b,!B,1000000000,null),l=H,ll=[nh($b,!B)|T].
iomshl3 @@
cost(A,!H),ll(T):-ll=[nh(A,!H)|T].



//shortestio_a(0,I)=>free I
shortestio_a($x,I):-$x=:=-1|io.free_port(I).
shortestio_a($x,I):-$x=:=0|io.free_port(I).
shortestio_a(X,I),eof(Y),$x[X,Y]:-ground($x)|io.free_port(I).

shortestio_a(X,I):-
io.read_token(I,I1,S1),
io.read_token(I1,I2,S2),
io.read_token(I2,I3,S3),
e(X,integer.of_str(S1),integer.of_str(S2)),
shortestio_a(integer.of_str(S3),I3).

shortestio.e_input:-
io.read_token(io.stdin,I,S),
shortestio_a(integer.of_str(S),I).

////String input
//shortestio_string(0,I)=>free I
shortestio_string(eof,I):-io.free_port(I).
shortestio_string($x,I):-$x="null"|io.free_port(I).

shortestio_string($x,I):-unary($x),uniq|
io.read_token(I,I1,S1),
io.read_token(I1,I2,S2),
io.read_token(I2,I3,S3),
e($x,S1,integer.of_str(S2)),
shortestio_string(S3,I3),
source($x).

shortestio_string(X,I):-
io.read_token(I,I1,S1),
io.read_token(I1,I2,S2),
io.read_token(I2,I3,S3),
e(X,S1,integer.of_str(S2)),
shortestio_string(S3,I3).

shortestio.e_input_string:-
io.read_token(io.stdin,I,S),
shortestio_string(S,I).


//string integer(O2)
shortestio_string_int(integer.of_str(eof),I):-io.free_port(I).

shortestio_string_int($x,I):-int($x),uniq|
io.read_token(I,I1,S1),
io.read_token(I1,I2,S2),
io.read_token(I2,I3,S3),
e(str.from($x),S1,integer.of_str(S2)),
shortestio_string_int(integer.of_str(S3),I3),
source(str.from($x)),maxint($x).

maxint($x),shortestio_string_int($y,I):-
$x<$y,uniq($y)|maxint($y),shortestio_string_int($y,I).

shortestio_string_int($x,I):-int($x)|
io.read_token(I,I1,S1),
io.read_token(I1,I2,S2),
io.read_token(I2,I3,S3),
e(str.from($x),S1,integer.of_str(S2)),
shortestio_string_int(integer.of_str(S3),I3).


shortestio.e_input_string_int:-
io.read_token(io.stdin,I,S),
shortestio_string_int(integer.of_str(S),I).


}.
