{
	module(makedata).

	makedata.cost($a,$b,$c):-
	$a=<$c,$c=<$b|
	cost($c,integer.set($a,$b),10000,null).
	makedata.cost($a,$b,$c):-
	int($a),int($b),int($c)|error(makedata_cost).

	makedata.cost($a,$b):-
	int($a),int($b)|
	cost(integer.set($a,$b),integer.set($a,$b),10000,null).
	cost($a,$b,$c,D):-$a==$b,$c\=0|cost($a,$b,0,D).
	
	
}.
/* old 連結グラフを想定していないでも動くが、ボトルネック
make_cost_string{
l=[].
md1 @@
e($a,$b,$c):-uniq($a,$b,$c)|e($a,$b,$c),e_to_cost($a,$b,$c).
md2 @@
l=[],e_to_cost(X,Y,$x):-uniq,int($x)|l=[X,Y].
md3 @@
L=[$l|H],e_to_cost($a,Y,$x):-$l==$a,int($x)|L=[$l,Y|H].
md4 @@
L=[$l|H],L1=[$l1|H1]:-$l==$l1|L=[$l|H],L1=H1.
md5 @@
source($x),L=[$l|H],l=H1:-$x==$l|L=H,l=[$x|H1].
}.
*/

//new
make_cost_string{
l=[].
md1 @@
e($a,$b,$c):-uniq($a,$b,$c)|e($a,$b,$c),e_to_cost($a,$b,$c).
//md2 @@
//l=[],e_to_cost(X,$y,$x):-uniq,int($x),unary($y)|l=[X].
md3 @@
e_to_cost(Y,$y,$x),l(H):-int($x),unary($y)|l=[Y|H].
md4 @@
L=[$l|H],L1=[$l1|H1]:-$l==$l1|L=[$l|H],L1=H1.
md5 @@
source($x),L=[$l|H],l=H1:-$x==$l|L=H,l=[$x|H1].
}.
make_cost_string_O2{
	l=[].
	maxint($x),l(H):-$x>0,$x1=$x-1|maxint($x1),l=[str.from($x)|H].
	source($x),L=[$l|H],l=H1:-$x==$l|L=H,l=[$x|H1].
}.
make_cost_string2{
	md22 @@
	l(L):-shortestio.make_string(L).
}.


make_cost_string2_hyper{
	md22h @@
	l(L):-shortestio.make_string_hyper(L).
}.
